# -*- coding: utf-8 -*-
"""Cópia de ProvaFinal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1RPF_EAmNBgdIpaJfMbdoVpQWa64MFJFw
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from pyngrok import ngrok
import os
import subprocess

# Configurar o modelo Gemini (substitua pela configuração correta do seu modelo)
# from genai import GenerativeModel  # Certifique-se de ter esta biblioteca instalada
# model = GenerativeModel('models/gemini-1.5-pro-latest')

# Função para processar a pergunta e gerar gráficos/tabelas
def process_question(question, data):
    # Gerar resposta (substitua pela lógica correta do seu modelo)
    # response = model.generate_response(question)
    response = {
        "text": "Aqui está uma resposta de exemplo.",
        "plot": True,
        "plot_type": "bar",
        "data": {
            "Categoria": ["A", "B", "C"],
            "Valores": [10, 20, 30]
        }
    }

    st.write("Resposta do modelo:")
    st.write(response['text'])

    if "plot" in response:
        plot_type = response.get('plot_type', 'bar')  # Tipo de gráfico, padrão é 'bar'
        plot_data = response['data']  # Dados para o gráfico

        # Exemplo de plotagem com Matplotlib
        df = pd.DataFrame(plot_data)

        if plot_type == 'bar':
            df.plot(kind='bar', x='Categoria', y='Valores')
        elif plot_type == 'line':
            df.plot(kind='line', x='Categoria', y='Valores')
        # Adicione mais tipos de gráficos conforme necessário

        st.pyplot(plt)

# URL do arquivo CSV bruto no GitHub
file_url = 'https://raw.githubusercontent.com/Guclima/ProvaFinal/ac0cc7ff9a00a3715c59f5d7a91e329180552fc6/Prova.csv'

# Carregar os dados a partir do URL
try:
    data = pd.read_csv(file_url)
    st.write("O arquivo foi carregado com sucesso!")

    # Interface do usuário com Streamlit
    st.title('Dashboard Interativo com Gemini')
    st.write('Faça uma pergunta sobre os dados:')

    question = st.text_input('Pergunta:')
    if st.button('Enviar'):
        process_question(question, data)
except Exception as e:
    st.write(f"Erro ao carregar o arquivo: {e}")

# Função para iniciar o Streamlit e ngrok
def start_streamlit():
    os.system("streamlit run app.py &")
    url = ngrok.connect(port='8501')
    print(f"Acesse o aplicativo em: {url}")

if __name__ == "__main__":
    # Verificar se estamos no ambiente do Colab
    if 'google.colab' in str(get_ipython()):
        print("Executando no Google Colab")
        # Instalar dependências
        subprocess.run(["pip", "install", "streamlit", "pyngrok", "pandas", "matplotlib"])
        start_streamlit()
    else:
        # Executar localmente
        st.write("Execute este script localmente ou no Google Colab")